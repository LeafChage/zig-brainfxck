const llvm = @cImport({
    @cInclude("llvm-c/Core.h");
    @cInclude("llvm-c/Analysis.h");
    @cInclude("llvm-c/BitReader.h");
    @cInclude("llvm-c/BitWriter.h");
    @cInclude("llvm-c/Comdat.h");
    @cInclude("llvm-c/DataTypes.h");
    @cInclude("llvm-c/DebugInfo.h");
    // @cInclude("llvm-c/Deprecated.h");
    @cInclude("llvm-c/Disassembler.h");
    @cInclude("llvm-c/DisassemblerTypes.h");
    @cInclude("llvm-c/Error.h");
    @cInclude("llvm-c/ErrorHandling.h");
    @cInclude("llvm-c/ExecutionEngine.h");
    @cInclude("llvm-c/ExternC.h");
    @cInclude("llvm-c/IRReader.h");
    @cInclude("llvm-c/LLJIT.h");
    @cInclude("llvm-c/LLJITUtils.h");
    @cInclude("llvm-c/Linker.h");
    @cInclude("llvm-c/Object.h");
    @cInclude("llvm-c/Orc.h");
    @cInclude("llvm-c/OrcEE.h");
    @cInclude("llvm-c/Remarks.h");
    @cInclude("llvm-c/Support.h");
    @cInclude("llvm-c/Target.h");
    @cInclude("llvm-c/TargetMachine.h");
    @cInclude("llvm-c/Transforms/PassBuilder.h");
    @cInclude("llvm-c/Types.h");
    @cInclude("llvm-c/blake3.h");
    @cInclude("llvm-c/lto.h");
});

pub usingnamespace llvm;
